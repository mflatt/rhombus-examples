#lang rhombus

import:
  racket/base:
    rename:
      #{set-box!} as set_box
  "../class.rkt" open
  racket/gui:
    rename:
      #{button%}          as Button
      #{frame%}           as Frame
      #{horizontal-pane%} as HPane
      #{message%}         as Message

// XXX: make a Box annotation with a .set(v) and .unbox()
val b: base.box(0)

fun update_val(d):
  base.set_box(b, d + base.unbox(b))
  update_label()

fun format_label():
  base.format("~a", base.unbox(b))

fun update_label():
  label.#{set-label}(format_label())

val w: new gui.Frame(~label: "counter",
                     ~width: 200)

val hpane: new gui.HPane(~parent: w)

val sub1: new gui.Button(~parent: hpane,
                         ~label: "-",
                         #{#:stretchable-width}: #true,
                         ~callback:
                           fun (btn, evt):
                             update_val(-1))

val label: new gui.Message(~parent: hpane,
                           #{#:auto-resize}: #true,
                           ~label: format_label())

val plus1: new gui.Button(~parent: hpane,
                          ~label: "+",
                          #{#:stretchable-width}: #true,
                          ~callback:
                            fun (btn, evt):
                              update_val(1))

w.show(#true)
