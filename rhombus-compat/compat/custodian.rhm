#lang rhombus

import:
  rhombus/meta open

  lib("racket/base.rkt") as r
  lib("racket/base.rkt") as custodian:
    rename:
      #{current-custodian}      as current
      #{custodian-shutdown-all} as shutdown
      #{make-custodian}         as _make
      #{custodian-limit-memory} as limit_memory

export:
  custodian.current
  custodian.shutdown
  custodian.limit_memory
  make
  Custodian
  custodian_dot_provider

annot.macro 'Custodian':
  annot_meta.pack_predicate('r.#{custodian?}',
                            '(($(statinfo_meta.dot_provider_key),
                               custodian_dot_provider))')

dot.macro 'custodian_dot_provider $left $dot $right':
  match right
  | 'limit_memory': 'fun(arg): custodian.limit_memory($left, arg)'
  | 'shutdown': 'fun(): custodian.shutdown($left)'

fun make(c :: Custodian = custodian.current()) :~ Custodian:
  custodian._make(c)
